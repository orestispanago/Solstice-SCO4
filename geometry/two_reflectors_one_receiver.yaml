- sun: &sun
    dni: 1
    spectrum: [{wavelength: 1, data: 1}]
# Possibility to provide as many wavelength values (and corresponding
# solar irradiance at ground level) as required, in order to
# take into account the spectral dependence to the solar emission
# and atmosphere absorption.

# Definition of materials
- material: &lambertian
    front:
      matte: { reflectivity: 1 }
    back:
      matte: { reflectivity: 1 }
      
- material: &specular
      mirror: { reflectivity: 1, slope_error: 0 }
      
- material: &black
      matte: { reflectivity: 0 }
      
# Definition of the "small_square" geometry that will be used
# by the receiver
- geometry: &small_square
    - material: *black
      plane:
        clip:
          - operation: AND
            vertices:
              - [-0.50, -0.50]
              - [-0.50, 0.50]
              - [0.50, 0.50]
              - [0.50, -0.50]
              
# Definition of the receiver's entity.
- entity:
    name: "square_receiver"
    primary: 0
# set "primary" to 0 because this entity should not the sampled
# as a primary reflector    
    transform: { rotation: [0, 90, 0], translation: [100, 0, 10] }
# The "small_square" geometry is created as horizontal. In order to
# have it vertical, a rotation of 90 degrees around the Y-axis
# must be performed.
# Also, a translation is applied in order to position it in space.
    anchors:
      - name: "anchor0"
        position: [0, 0, 0]
# An anchor is defined, at a local position (in the referential of
# the square)        
    geometry: *small_square
              
             
# Definition of a geometry template for primary reflectors (parabol)              
- template: &self_oriented_parabol
    name: "so_parabol"
    transform: { translation: [0, 0, 4], rotation: [0, 0, 90] }
# The 90-degrees rotation around the Z-axis is required so that the
# pivot rotates around the Y-axis and not the X-axis.    
    zx_pivot:
      ref_point: [0, 0, 0]
      target: { anchor: square_receiver.anchor0 }
# the target is the anchor that was previously defined in
# the receiver's entity (the center of the square)
    children:
      - name: "parabol"
        transform: { rotation: [-90, 0, 0], translation: [0, 0, 0] }
# This -90-degrees rotation over the X-axis is required because:
# - the parabol is generated "horizontal": its central axis is the Z-axis
# - the automatic orientation of the parabol will be performed so that
# the Y-axis is the local normal of the specular reflexion @ ref_point
# - a 90-degrees rotation around the Z-axis is applied
# => in order to make the X-axis the local normal of specular reflexion,
# the parabol must be rotated by -90-degrees around X and then
# by 90-degrees around Z.
        primary: 1 # primary=1 -> sampled for integration
        geometry:
        - material: *specular
          parabol:
            focal: 100
            clip:
            - operation: AND
              vertices: [[-5.0, -5.0], [-5.0, 5.0], [5.0, 5.0], [5.0, -5.0]]
      
# Two identical parabols are placed at two different locations.
# Automatic orientation of the parabols so that a specular
# reflexion of the sun's main direction at the center of the parabol
# is directed to the center of the receiver.
- entity:
    name: "reflector1"
    transform: { rotation: [0, 0, 0], translation: [0, 0, 0] }
    children: [ *self_oriented_parabol ]
    
- entity:
    name: "reflector2"
    transform: { rotation: [0, 0, 0], translation: [10, 43.6, 0] }
    children: [ *self_oriented_parabol ]
    
    
